<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             version="1.0">
  <module_parameters>
    <parameters  id="combodo-anonymizer" _delta="define">
      <enabled>true</enabled>
      <debug>true</debug>
      <max_chunk_size>1000</max_chunk_size>
      <time>00:30</time>
      <end_time>05:30</end_time>
      <week_days>monday, tuesday, wednesday, thursday, friday, saturday, sunday</week_days>
      <max_execution_time>30</max_execution_time>
      <max_interactive_anonymization_time_in_s>30</max_interactive_anonymization_time_in_s>
      <anonymize_obsolete_persons>false</anonymize_obsolete_persons>
      <obsolete_persons_retention>-1</obsolete_persons_retention>
      <caselog_content type="array">
        <field id="0">friendlyname</field>
        <field id="1">email</field>
        <field id="2">name</field>
      </caselog_content>
      <on_mention>trigger-only</on_mention>
      <notification_content type="array">
        <field id="0">friendlyname</field>
        <field id="1">email</field>
        <field id="2">name</field>
      </notification_content>
      <actions type="array">
        <action id="0">ActionResetPersonFields</action>
        <action id="10">ActionAnonymizePerson</action>
        <action id="20">ActionCleanupCaseLogs</action>
        <action id="30">ActionCleanupOnMention</action>
        <action id="40">ActionCleanupEmailNotification</action>
        <action id="50">ActionCleanupUsers</action>
        <action id="60">ActionPurgePersonHistory</action>
        <action id="1000">ActionEndOfAnonymization</action>
      </actions>
      <anonymized_fields type="hash">
        <name>Contact %1$s</name>
        <first_name>Anonymous</first_name>
        <email>Anonymous.Contact%1$s@anony.mized</email>
      </anonymized_fields>
    </parameters>
  </module_parameters>
  <constants>
  </constants>
  <classes>
    <class id="RessourceAnonymization" _delta="define">
      <parent>AbstractResource</parent>
      <properties>
        <comment>/* Anonymization menu access control. */</comment>
        <abstract>true</abstract>
        <category>grant_by_profile</category>
      </properties>
      <presentation/>
      <methods/>
    </class>
    <class id="AnonymizationTask" _delta="define">
      <parent>BackgroundTaskEx</parent>
      <properties>
        <category/>
        <abstract>false</abstract>
        <db_table>priv_anonymization_task</db_table>
      </properties>
      <fields>
        <field id="person_id" xsi:type="AttributeExternalKey">
          <sql>person_id</sql>
          <target_class>Person</target_class>
          <is_null_allowed>false</is_null_allowed>
          <on_target_delete>DEL_AUTO</on_target_delete>
        </field>
        <field id="anonymization_context" xsi:type="AttributeText">
          <sql>anonymization_context</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
          <tracking_level>none</tracking_level>
        </field>
       </fields>
      <methods>
        <method id="GetNextAction">
          <static>false</static>
          <access>public</access>
          <type>Overload-cmdbAbstractObject</type>
          <code><![CDATA[
       public function GetNextAction()
       {
            $sCurrentActionId = $this->Get('current_action_id');
            if (!$sCurrentActionId) {
                // Create actions
                $aActions = MetaModel::GetConfig()->GetModuleParameter(\Combodo\iTop\Anonymizer\Helper\AnonymizerHelper::MODULE_NAME, 'actions', []);
                foreach ($aActions as $iRank => $sActionClass) {
                    if (MetaModel::IsValidClass($sActionClass)) {
                        $oAction = MetaModel::NewObject($sActionClass, ['name' => $sActionClass, 'rank' => $iRank, 'task_id' => $this->GetKey()]);
                        $oAction->DBWrite();
                    } else {
                        \Combodo\iTop\Anonymizer\Helper\AnonymizerLog::Error("$sActionClass is not an action");
                    }
                }
            }
            return parent::GetNextAction();
       }
]]></code>
        </method>
      </methods>
      <presentation>
        <list>
          <items>
            <item id="person_id">
              <rank>10</rank>
            </item>
            <item id="status">
              <rank>60</rank>
            </item>
          </items>
        </list>
        <default_search>
          <item id="status">
            <rank>60</rank>
          </item>
        </default_search>
      </presentation>
    </class>
    <class id="AnonymizationTaskAction" _delta="define">
      <parent>BackgroundTaskExAction</parent>
      <properties>
        <abstract>false</abstract>
        <db_table>priv_anonym_action</db_table>
        <category/>
      </properties>
      <fields>
        <field id="action_params" xsi:type="AttributeLongText">
          <sql>action_params</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
          <tracking_level>none</tracking_level>
        </field>
      </fields>
      <presentation>
        <list>
          <items>
            <item id="name">
              <rank>10</rank>
            </item>
            <item id="rank">
              <rank>60</rank>
            </item>
          </items>
        </list>
      </presentation>
      <methods/>
    </class>
    <class id="Person" _delta="must_exist">
      <properties>
        <uniqueness_rules>
          <rule id="name" _delta="if_exists">
            <filter _delta="redefine" ><![CDATA[anonymized = 0]]></filter>
          </rule>
        </uniqueness_rules>
      </properties>
      <fields>
        <field id="anonymized" xsi:type="AttributeBoolean" _delta="define">
          <sql>anonymized</sql>
          <is_null_allowed>false</is_null_allowed>
          <default_value>0</default_value>
        </field>
      </fields>
      <methods>
        <method id="DisplayBareHeader" _delta="define">
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[
        public function DisplayBareHeader(WebPage $oPage, $bEditMode = false)
        {
         $oSet = new DBObjectSet(DBSearch::FromOQL("SELECT AnonymizationTask WHERE person_id=:id"), [], ["id" => $this->GetKey()]);
          if ($oSet->Count() > 0) {
            $sMessage = Dict::S('Anonymization:InProgress');
            $this::SetSessionMessage(get_class($this), $this->GetKey(), 1, $sMessage, 'info', 1);
          }
          return parent::DisplayBareHeader($oPage, $bEditMode);
        }
          ]]></code>
        </method>
      </methods>
    </class>
  </classes>
  <menus>
    <menu id="ConfigAnonymizer" xsi:type="WebPageMenuNode" _delta="define">
      <rank>15</rank>
      <parent>ConfigurationTools</parent>
      <url>$pages/exec.php?exec_module=combodo-anonymizer&amp;exec_page=config.php&amp;c[menu]=ConfigurationTools</url>
      <enable_class>RessourceAnonymization</enable_class>
      <enable_action>UR_ACTION_MODIFY</enable_action>
    </menu>
    <menu id="AnonymizationTask" xsi:type="OQLMenuNode" _delta="define">
      <rank>16</rank>
      <parent>ConfigurationTools</parent>
      <oql><![CDATA[SELECT AnonymizationTask]]></oql>
      <do_search>1</do_search>
      <enable_class>RessourceAnonymization</enable_class>
      <enable_action>UR_ACTION_MODIFY</enable_action>
    </menu>
  </menus>
  <user_rights>
    <groups>
      <group id="RessourceAnonymizationGroup">
        <classes>
          <class id="RessourceAnonymization"/>
          <class id="BackgroundTaskEx"/>
          <class id="BackgroundTaskExAction"/>
        </classes>
      </group>
      <group id="RessourcePersonGroup">
        <classes>
          <class id="Location"/>
          <class id="Organization"/>
          <class id="Contact"/>
        </classes>
      </group>
    </groups>
    <profiles>
      <profile id="52" _delta="define">
        <name>Anonymization Agent</name>
        <description>Person in charge of anonymization. Must be used in conjunction with other profiles (e.g. Configuration Manager, Service Manager,…).</description>
        <groups>
          <group id="RessourceAnonymizationGroup">
            <actions>
              <action id="action:read">allow</action>
              <action id="action:bulk read">allow</action>
              <action id="action:write">allow</action>
              <action id="action:bulk write">allow</action>
            </actions>
          </group>
          <group id="RessourcePersonGroup">
            <actions>
              <action id="action:read">allow</action>
              <action id="action:bulk read">allow</action>
            </actions>
          </group>
        </groups>
      </profile>
    </profiles>
  </user_rights>
  <dictionaries>
    <dictionary id="EN US">
      <entries>
        <entry id="Class:Person/Attribute:anonymized" _delta="define"><![CDATA[Anonymized?]]></entry>
      </entries>
    </dictionary>
    <dictionary id="FR FR">
      <entries>
        <entry id="Class:Person/Attribute:anonymized" _delta="define"><![CDATA[Anonymisé ?]]></entry>
      </entries>
    </dictionary>
  </dictionaries>
</itop_design>
