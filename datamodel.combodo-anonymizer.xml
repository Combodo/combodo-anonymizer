<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             version="1.0">
  <module_parameters>
    <parameters  id="combodo-anonymizer" _delta="define">
      <caselog_content type="array">
        <field id="0">friendlyname</field>
        <field id="1">email</field>
        <field id="2">name</field>
      </caselog_content>
      <on_mention>trigger-only</on_mention>
      <notification_content type="array">
        <field id="0">friendlyname</field>
        <field id="1">email</field>
        <field id="2">name</field>
      </notification_content>
      <actions type="array">
        <action id="0">\Combodo\iTop\Anonymizer\Action\AnonymizePerson</action>
        <action id="1">\Combodo\iTop\Anonymizer\Action\PurgePersonHistory</action>
        <action id="2">\Combodo\iTop\Anonymizer\Action\CleanupUsers</action>
        <action id="3">\Combodo\iTop\Anonymizer\Action\CleanupCaseLogs</action>
        <action id="100">\Combodo\iTop\Anonymizer\Action\ResetObjectFields</action>
      </actions>
      <anonymized_fields type="hash">
        <name>Contact %1$s</name>
        <first_name>Anonymous</first_name>
        <email>%1$s.%2$s%3$s@anony.mized</email>
      </anonymized_fields>
    </parameters>
  </module_parameters>
  <constants>
  </constants>
  <classes>
    <class id="RessourceAnonymization" _delta="define">
      <parent>AbstractResource</parent>
      <properties>
        <comment>/* Anonymization menu access control. */</comment>
        <abstract>true</abstract>
        <category>grant_by_profile</category>
      </properties>
      <presentation/>
      <methods/>
    </class>
    <class id="BatchAnonymizationTask" _delta="define">
      <parent>DBObject</parent>
      <php_parent>
        <name>AbstractBatchAnonymizationTask</name>
      </php_parent>
      <properties>
        <category/>
        <abstract>false</abstract>
        <db_table>priv_batch_anonymization_task</db_table>
        <naming>
          <format>%1$s %2$s</format>
          <attributes>
            <attribute id="class_to_anonymize"/>
            <attribute id="id_to_anonymize"/>
          </attributes>
        </naming>
      </properties>
      <fields>
        <field id="class_to_anonymize" xsi:type="AttributeString">
          <sql>class_to_anonymize</sql>
          <default_value/>
          <is_null_allowed>false</is_null_allowed>
          <tracking_level>none</tracking_level>
        </field>
        <field id="id_to_anonymize" xsi:type="AttributeInteger">
          <sql>id_to_anonymize</sql>
          <default_value/>
          <is_null_allowed>false</is_null_allowed>
          <tracking_level>none</tracking_level>
        </field>
        <field id="action" xsi:type="AttributeString">
          <sql>action</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
          <tracking_level>none</tracking_level>
        </field>
        <field id="action_params" xsi:type="AttributeText">
          <sql>action_params</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
          <tracking_level>none</tracking_level>
        </field>
        <field id="anonymization_context" xsi:type="AttributeText">
          <sql>anonymization_context</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
          <tracking_level>none</tracking_level>
        </field>
        <field id="status" xsi:type="AttributeEnum">
          <sql>status</sql>
          <is_null_allowed>false</is_null_allowed>
          <default_value>created</default_value>
          <tracking_level>none</tracking_level>
          <values>
            <value id="created">
              <code>created</code>
            </value>
            <value id="running">
              <code>running</code>
            </value>
            <value id="paused">
              <code>paused</code>
            </value>
          </values>
        </field>
      </fields>
      <methods/>
      <presentation>
        <list>
          <items>
            <item id="class_to_anonymize">
              <rank>10</rank>
            </item>
            <item id="id_to_anonymize">
              <rank>20</rank>
            </item>
            <item id="status">
              <rank>60</rank>
            </item>
          </items>
        </list>
      </presentation>
    </class>
    <class id="Person" _delta="must_exist">
      <properties>
        <uniqueness_rules>
          <rule id="name" _delta="if_exists">
            <filter _delta="redefine" ><![CDATA[anonymized = 0]]></filter>
          </rule>
        </uniqueness_rules>
      </properties>
      <fields>
        <field id="anonymized" xsi:type="AttributeBoolean" _delta="define">
          <sql>anonymized</sql>
          <is_null_allowed>false</is_null_allowed>
          <default_value>0</default_value>
        </field>
      </fields>
      <methods>
        <method id="DisplayBareHeader" _delta="define">
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[
        public function DisplayBareHeader(WebPage $oPage, $bEditMode = false)
        {
          $oSet = new DBObjectSet(DBSearch::FromOQL("SELECT BatchAnonymizationTask WHERE class_to_anonymize='Person' AND id_to_anonymize=:id"), [], ["id" => $this->GetKey()]);
          if ($oSet->Count() > 0) {
            $sMessage = Dict::S('Anonymization:InProgress');
            $this::SetSessionMessage(get_class($this), $this->GetKey(), 1, $sMessage, 'info', 1);
          }
          parent::DisplayBareHeader($oPage, $bEditMode);
        }
          ]]></code>
        </method>
        <method id="Anonymize" _delta="define">
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[
        public function Anonymize()
        {
          $sEmail = $this->Get('email');
          $aDataToAnonymize = [];
          $aDataToAnonymize['friendlyname'][] = $this->GetName();
          $aDataToAnonymize['email'][] = $sEmail;


          // Put some more fancy values
          $this->SetAnonymousValues();

          //TODO when min iTop Version > 3.0 : save person after the purge of his data
          // actually in case of error during purge, person is already anonymized and it isn't possible to restart the processus
          // in 2.7 we can't get anonymized friendlyname whitout save object
          //persons are marked as anonymized later when all the process is finish

          // Write the object
         $this->AllowWrite(true);
         // Ignore synchro
         $this->m_bCheckStatus = true;
         $this->DBWrite();

          $this->Reload();
          $aAnonymizedData['friendlyname'] = $this->GetName();
          $aAnonymizedData['email'] = $this->Get('email');

           //desactivate linked user
	        $oValues = ['class_to_anonymize' => get_class($this),
                        'id_to_anonymize' => $this->GetKey(),
                        'id_user_to_anonymize' => null,
                        'needles' => json_encode($aDataToAnonymize),
                        'anonymized_data' => json_encode($aAnonymizedData)];

          $oSearch = new DBObjectSearch('User');
          $oSearch->AddCondition('contactid', $this->GetKey());
          $oSearch->AllowAllData(true);
          $oSet = new DBObjectSet($oSearch);
          $iNbUser = 0;
          $aUser = [];
          while($oUser = $oSet->Fetch())
          {
            $aDataToAnonymize['login'] = $oUser->Get('login');
	          $oUser->Set('status', 'disabled');
	          if ($iNbUser == 0) {
	              $oUser->Set('login', 'Anonymous'.$this->GetKey());
	          }  else {
	              $oUser->Set('login', 'Anonymous'.$this->GetKey().'-'.$iNbUser);
	          }
	          $oUser->AllowWrite(true);
	          $oUser->DBUpdate();

            $aUser[] = $oUser->GetKey();
            $iNbUser++;
        }
        if ($iNbUser>0){
          $oValues ['id_user_to_anonymize'] = implode(',', $aUser);
        }
          // Purge the history for this object, otherwise previous values can be retrieved from the history
          $oValues['function'] =  'PurgeHistoryByBatch';
          $oBatchAnonymization = MetaModel::NewObject("BatchAnonymization",$oValues);
          $oBatchAnonymization->DBInsertNoReload();

          // Cleanup all references to the Person's name as an author of a case log entry
          $oValues['function'] =  'CleanupCaseLogsByBatch';
          $oBatchAnonymization = MetaModel::NewObject("BatchAnonymization",$oValues);
          $oBatchAnonymization->DBInsertNoReload();

          if (version_compare(ITOP_DESIGN_LATEST_VERSION , '3.0') >= 0) {
            $oValues['function'] =  'CleanupOnMentionByBatch';
            $oBatchAnonymization = MetaModel::NewObject("BatchAnonymization",$oValues);
            $oBatchAnonymization->DBInsertNoReload();
          }

          if (!empty($sEmail)){
            $oValues['function'] =  'CleanupEmailByBatch';
            $oBatchAnonymization = MetaModel::NewObject("BatchAnonymization",$oValues);
            $oBatchAnonymization->DBInsertNoReload();
          }
        }
]]></code>
        </method>
        <method id="SetAnonymousValues" _delta="define">
          <static>false</static>
          <access>protected</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[
        public function SetAnonymousValues()
       {
           // Put some more fancy values
           $this->Set('name', Dict::S('Anonymization:Person:name').' '.$this->GetKey());
           $this->Set('first_name', Dict::S('Anonymization:Person:first_name'));
           $this->Set('email', Dict::Format('Anonymization:Person:email', Dict::S('Anonymization:Person:first_name'), Dict::S('Anonymization:Person:name'), $this->GetKey()) );
           // Mark the contact as obsolete
           $this->Set('status', 'inactive');
           // Remove picture
           $this->Set('picture', null);
       }

]]></code>
        </method>
      </methods>
    </class>
  </classes>
  <menus>
    <menu id="ConfigAnonymizer" xsi:type="WebPageMenuNode" _delta="define">
      <rank>15</rank>
      <parent>ConfigurationTools</parent>
      <url>$pages/exec.php?exec_module=combodo-anonymizer&amp;exec_page=config.php&amp;c[menu]=ConfigurationTools</url>
      <enable_class>RessourceAnonymization</enable_class>
      <enable_action>UR_ACTION_MODIFY</enable_action>
    </menu>
  </menus>
  <user_rights>
    <groups>
      <group id="RessourceAnonymizationGroup">
        <classes>
          <class id="RessourceAnonymization"/>
          <class id="BatchAnonymization"/>
        </classes>
      </group>
      <group id="RessourcePersonGroup">
        <classes>
          <class id="Location"/>
          <class id="Organization"/>
          <class id="Contact"/>
        </classes>
      </group>
    </groups>
    <profiles>
      <profile id="52" _delta="define">
        <name>Anonymization Agent</name>
        <description>Person in charge of anonymization. Must be used in conjunction with other profiles (e.g. Configuration Manager, Service Manager,…).</description>
        <groups>
          <group id="RessourceAnonymizationGroup">
            <actions>
              <action id="action:read">allow</action>
              <action id="action:bulk read">allow</action>
              <action id="action:write">allow</action>
              <action id="action:bulk write">allow</action>
            </actions>
          </group>
          <group id="RessourcePersonGroup">
            <actions>
              <action id="action:read">allow</action>
              <action id="action:bulk read">allow</action>
            </actions>
          </group>
        </groups>
      </profile>
    </profiles>
  </user_rights>
  <dictionaries>
    <dictionary id="EN US">
      <entries>
        <entry id="Class:Person/Attribute:anonymized" _delta="define"><![CDATA[Anonymized?]]></entry>
      </entries>
    </dictionary>
    <dictionary id="FR FR">
      <entries>
        <entry id="Class:Person/Attribute:anonymized" _delta="define"><![CDATA[Anonymisé ?]]></entry>
      </entries>
    </dictionary>
  </dictionaries>
</itop_design>
